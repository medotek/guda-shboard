security:
    enable_authenticator_manager: true

    encoders:
        App\Entity\User:
            algorithm: auto

    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email

    firewalls:
        register:
            pattern: ^/api/register
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                username_path: email
                check_path: /api/login
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
        api:
            pattern:   ^/api
            stateless: true
            jwt: ~
        main:
            form_login:
                login_path: gudadmin_login
                check_path: gudadmin_login
                enable_csrf: true
                username_parameter: "email"
                password_parameter: "password"
                default_target_path: admin
                #   always_use_default_target_path: true
            logout:
                path: admin_logout

    access_control:
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        - { path: ^/api/register, roles: PUBLIC_ACCESS }
#        - { path: ^/api,       roles: IS_AUTHENTICATED_FULLY }
        - { path: /gudadmin/login, roles: PUBLIC_ACCESS }
        - { path: ^/gudadmin, roles: [ROLE_GUDADMIN, ROLE_ADMIN] }

when@test:
    security:
        password_hashers:
            # By default, password hashers are resource intensive and take time. This is
            # important to generate secure password hashes. In tests however, secure hashes
            # are not important, waste resources and increase test times. The following
            # reduces the work factor to the lowest possible values.
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4 # Lowest possible value for bcrypt
                time_cost: 3 # Lowest possible value for argon
                memory_cost: 10 # Lowest possible value for argon
